type Query {
    getPost(id: ID!): Post
    getPostRecentByAuthorID(id: ID!): Post
    getPostsbyAuthorID(post_id: ID, author_id: ID!): [Post]
    getPostsbyAuthorIDRecent(post_id: ID, author_id: ID!): [Post]
    getPostsRecent: [Post]
    getPosts_CommunityPosts(id: ID!): [Post]
    getCommunity(id: ID!): Community
    getAllCommunities: [Community]
    getCommunity_Posts_Users(id: ID!): Community
    getCommunity_User(id: ID!): Community
    checkCommunityName(name: String!): Community
    getCommunityBans(id: ID!): [CommunityBan]
    getCommunityUserRole(id: ID!): [CommunityUserRole]
    getCommunityUserRoleByUser(id: ID!): [CommunityUserRole]
    getCommunityUserRoleByCommunity(id: ID!): [CommunityUserRole]
    getCommunityUserRole_User_Post(id: ID!): [CommunityUserRole]
    getComment (id: ID!): Comment
    getCommentsbyPostID(id: ID!): [Comment]
    getCommentsbyAuthorID(id: ID!): [Comment]
    getCommentsbyAuthorIDRecent(id: ID!): [Comment]
    getFamilyComments(id: ID!): Comment
    getChildComments (id: ID!): [Comment]
    getRolesPermissions(id: ID!): [RolesPermissions]
    getRole(id: ID!): Role
    getPermission(id: ID!): Permission
    getUser(id: ID!): User
    getAllUser: [User]
    getViewAccount(id: ID!): User
    checkUserEmail(email: String!): User
    checkUserPassword(id: ID!, password: String!): User
    loginUser(email: String!, password: String!): User
    getMessages(id: ID!): [Message]
    getSentMessages(id: ID!): [Message]
    checkPostUpvote(author_id: ID!, post_id: ID!): Post_Upvote_Downvote
    checkPostDownvote(author_id: ID!, post_id: ID!): Post_Upvote_Downvote
    getUpvotes_PostID(id: ID!): [Post_Upvote_Downvote]
    getDownvotes_PostID(id: ID!): [Post_Upvote_Downvote]
    getSecurityQuestionsByAuthorID(id: ID!): [Security_Question]
}

type Mutation {
    createPost(post: PostInput!): Post
    updatePost(post: UpdatePostInput!): Post
    deletePost(post: DeletePostInput!): Post
    lockPost(post: LockPostInput!): Post
    createComment(comment: CommentInput!): Comment
    updateComment(comment: UpdateCommentInput!): Comment
    deleteComment(comment: DeleteCommentInput!): Comment
    deleteParentComment(comment: DeleteCommentInput!): Comment
    createCommunity(communityUser: CommunityUserInput!): Community_CommunityUserRole
    updateCommunityUserRole(communityuserrole: CommunityUserRoleInput!): CommunityUserRole_Owner
    updateCommunityDetails(community: CommunityInput!): Community
    createUser_CommunityUserRole(communityuserrole: CommunityUserRoleInput!): CommunityUserRole
    removeUser_CommunityUserRole(communityuserrole: CommunityUserRoleInput!): CommunityUserRole
    banUser(communityban: CommunityBanInput!): CommunityBan
    registerUser(user: UserInput!): User
    changeUserInfo(user: UserInput!): User
    changeUserPassword(user: UserInput!): User
    sendMessage(message: MessageInput!): Message
    deleteMessage(message: MessageInput!): Message
    deleteMessage_sender_recipient(message: MessageInput!): Message
    postUpvote(post_upvote_downvote: Post_Upvote_Downvote_Input!): Post_Upvote_Downvote 
    postDownvote(post_upvote_downvote: Post_Upvote_Downvote_Input!): Post_Upvote_Downvote 
    removePostUpvote(post_upvote_downvote: Post_Upvote_Downvote_Input!): Post_Upvote_Downvote 
    removePostDownvote(post_upvote_downvote: Post_Upvote_Downvote_Input!): Post_Upvote_Downvote 
    createSecurityQuestion(securityQuestion: Security_Question_Input!): Security_Question
    updateSecurityQuestion(securityQuestion: Security_Question_Input!): Security_Question
    removeSecurityQuestion(securityQuestion: Security_Question_Input!): Security_Question
}

input LoginInput {
    email: String
    password: String
}

input UserInput {
    id: Int
    email: String
    username: String
    password: String
}

input UpdatePostInput {
    id: Int
    title: String
    image: String
    text: String
    updated_at: String
}

input UpdateCommentInput {
    id: Int
    comment: String
    updated_at: String
}

input DeleteCommentInput {
    id: Int
}

input DeletePostInput {
    id: Int
    commentLength: Int
}

input LockPostInput {
    id: Int
    active: Int
}

input PostInput {
    author_id: Int
    title: String
    type: String
    image: String
    text: String
    active: Int
    community_id: Int
}

input CommentInput {
    post_id: Int
    author_id: Int
    parent_comment_id: Int
    comment: String
}

input CommunityInput {
    id: Int
    title: String
    summary: String
}

input CommunityUserInput {
    title: String
    summary: String
    user_id: Int
}

input CommunityBanInput {
    community_id: Int
    user_id: Int
}

input CommunityUserRoleInput {
    owner_id: Int
    owner_role_id: Int
    community_id: Int
    user_id: Int
    role_id: Int
}

input MessageInput {
    id: Int
    sender_id: Int
    recipient_id: Int
    subject_line: String
    message: String
    sender_delete: Int
    recipient_delete: Int
}

input Post_Upvote_Downvote_Input {
    post_id: Int
    author_id: Int
}

input Comment_Upvote_Downvote_Input {
    comment_id: Int
    author_id: Int
}

input Security_Question_Input {
    user_id: Int
    question: String
    answer: String
}

type Post {
    id: Int
    author_id: Int
    user: User
    title: String
    type: String
    image: String
    text: String
    active: Int
    community_id: Int
    community: Community
    updated_at: String
    created_at: String
    comment: [Comment]
    post_upvotes: [Post_Upvote_Downvote]
    post_downvotes: [Post_Upvote_Downvote]
}

type Community {
    id: Int
    title: String
    public: Int
    summary: String
    communityuserrole: [CommunityUserRole]
    post: [Post]
    communityban: [CommunityBan]
}

type CommunityBan {
    community_id: Int
    user_id: Int
}

type Community_CommunityUserRole {
    title: String
    summary: String    
    community_id: Int
    user_id: Int
    role_id: Int
}

type CommunityUserRole {
    community_id: Int
    user_id: Int
    role_id: Int
    community: Community
    user: User
    role: Role
    post: [Post]
}

type CommunityUserRole_Owner {
    owner_id: Int
    owner_role_id: Int
    community_id: Int
    user_id: Int
    role_id: Int
}

type User {
    id: Int
    email: String
    username: String
    password: String
}

type Role {
    id: Int
    title: String
    rolespermissions: [RolesPermissions]
}

type RolesPermissions {
    role_id: Int
    permission_id: Int
    permission: Permission
}

type Permission {
    id: Int
    action: String
}

type Comment {
    id: Int
    post_id: Int
    author_id: Int
    parent_comment_id: Int
    comment: String
    updated_at: String
    created_at: String
    user: User
    parent: Comment
    child: [Comment]
    post: Post
}

type CommentFamily {
    id: Int
    post_id: Int
    author_id: Int
    parent_comment_id: Int
    updated_at: String
    created_at: String
    comment: String 
    parent: Comment
    child: [Comment]
}

type Message {
    id: Int
    sender_id: Int
    recipient_id: Int
    subject_line: String
    message: String
    sender_delete: Int
    recipient_delete: Int
    created_at: String
    recipient: User
    sender: User
}

type Post_Upvote_Downvote {
    post_id: Int
    author_id: Int
}

type Comment_Upvote_Downvote {
    comment_id: Int
    author_id: Int
}

type Security_Question {
    user_id: Int
    question: String
    answer: String
}